function Yq = quantdwt(Y, q, iter)

Yq = Y;

switch iter
    case 1
        ratio = [1.3844 1 1.3844; 1.91667 0 0];
    case 2
        ratio = [1.3844 1 1.3844; 0.9028 0.7797 0.9028; 1.04545 0 0];
    case 3
        ratio = [1.3844 1 1.3844; 0.9028 0.7797 0.9028; 0.4923 0.4532 0.4923; 0.5349 0 0];
    case 4
        ratio = [1.3844 1 1.3844; 0.9028 0.7797 0.9028; 0.4923 0.4532 0.4923; 0.2521 0.2362 0.2521; 0.2394 0 0];
    case 5
        ratio = [1.3844 1 1.3844; 0.9028 0.7797 0.9028; 0.4923 0.4532 0.4923; 0.2521 0.2362 0.2521; 0.1268 0.1194 0.1268; 0.1347 0 0];
end

for i=1:iter
    Yq(1:2^(8-i),2^(8-i)+1:2^(8-i+1)) = quant2(Yq(1:2^(8-i),2^(8-i)+1:2^(8-i+1)), q*ratio(i,1), q*ratio(i, 1));
    Yq(2^(8-i)+1:2^(8-i+1),2^(8-i)+1:2^(8-i+1)) = quant2(Yq(2^(8-i)+1:2^(8-i+1),2^(8-i)+1:2^(8-i+1)), q*ratio(i,2), q*ratio(i, 2));
    Yq(2^(8-i)+1:2^(8-i+1),1:2^(8-i)) = quant2(Yq(2^(8-i)+1:2^(8-i+1),1:2^(8-i)), q*ratio(i,3), q*ratio(i,3));
end

Yq(1:2^(8-iter), 1:2^(8-iter)) = quant2(Yq(1:2^(8-iter), 1:2^(8-iter)), q*ratio(iter+1, 1));

return;